# Generated by Django 5.1.3 on 2024-11-20 18:07

import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('aka', models.CharField(blank=True, max_length=200, verbose_name='commonly known as')),
            ],
            options={
                'ordering': ('last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('journal_visibility', models.IntegerField(choices=[(0, 'Private'), (1, 'Followers'), (2, 'Public')], default=1, verbose_name='journal visibility')),
                ('default_visibility', models.IntegerField(choices=[(0, 'Private'), (1, 'Followers'), (2, 'Public')], default=0, verbose_name='default entry visibility')),
                ('about', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('published', models.SmallIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('authors', models.ManyToManyField(blank=True, to='journal.author')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='entry title')),
                ('body', models.TextField()),
                ('status', models.CharField(choices=[('d', 'Draft'), ('p', 'Published')], default='p', max_length=1)),
                ('section', models.CharField(blank=True, max_length=200)),
                ('chapter', models.CharField(blank=True, max_length=200)),
                ('visibility', models.IntegerField(choices=[(0, 'Private'), (1, 'Followers'), (2, 'Public')], default=0)),
                ('publish_dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time published')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.book')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'entry',
                'verbose_name_plural': 'entries',
                'ordering': ('-publish_dt',),
            },
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_from_set', to=settings.AUTH_USER_MODEL)),
                ('user_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_to_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user_to__username',),
            },
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, max_length=200)),
                ('requested', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('o', 'Outstanding'), ('a', 'Accepted'), ('d', 'Declined')], default='o', max_length=1)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_from_set', to=settings.AUTH_USER_MODEL)),
                ('user_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_to_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-requested',),
            },
        ),
    ]
